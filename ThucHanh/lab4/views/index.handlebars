<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Information</title>
    <!-- Link to Bootstrap CSS via CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Link to DataTables CSS via CDN -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css">
</head>
<body>
    <div class="container mt-5">

    <div class="row">
            <label for="pageSizeSelect">Chọn số lượng mục mỗi trang:</label>

        <div class="col-md-1">
            <select class="form-control" id="pageSizeSelect">
                 <option value="10" {{#if (eq pageSize 10)}}selected{{/if}}>10</option>
                <option value="20" {{#if (eq pageSize 20)}}selected{{/if}}>20</option>
                <option value="30" {{#if (eq pageSize 30)}}selected{{/if}}>30</option>
                <option value="50" {{#if (eq pageSize 50)}}selected{{/if}}>50</option>
                <option value="100" {{#if (eq pageSize 100)}}selected{{/if}}>100</option>
            </select>
        </div>
    </div>
        <div class="table-responsive">
            <table class="table" id="userTable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Gender</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each responseData}}
                    <tr>
                        <td>{{this.id}}</td>
                        <td>{{this.name}}</td>
                        <td>{{this.email}}</td>
                        <td>{{this.gender}}</td>
                        {{#if (eq this.status "active")}}
                            <td style="color: green;">{{this.status}}</td>
                        {{else}}
                            <td style="color: red;">{{this.status}}</td>
                        {{/if}}
                        <td>
                            <a href="/details/{{this.id}}" class="btn btn-primary">Details</a>
                                <a href="/update/{{this.id}}" class="btn btn-secondary">Update</a>
                                <button class="btn btn-danger delete-button" data-id="{{this.id}}">Delete</button>                        </td>
                    </tr>
                    {{/each}}
                  
                </tbody>
            </table>
        </div>
        <div class="row mt-4">
    <div class="col-md-12">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-end" id="pagination">
            <li class="page-item">
                <a class="page-link Previous" href="" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li class="page-item"><a class="page-link" href="?page={{page}}">{{page}}</a></li>
            <li class="page-item">
                <a class="page-link next" href="" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
    </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js"></script>

  <script>
    $(document).ready(function () {
      const dataTable = $('#userTable').DataTable({
        paging: false 
    });
   
    $('#userTable').DataTable();
   

   


});
document.addEventListener("DOMContentLoaded", function () {
    const pagination = document.getElementById("pagination");
    const pagePrevious = pagination.querySelector(".Previous");
    const pageNext = pagination.querySelector(".next");
   var pageSizeSelect = document.getElementById("pageSizeSelect");

    // Lấy tham số "page" từ URL
    const urlParams = new URLSearchParams(window.location.search);
    let currentPage = parseInt(urlParams.get("page") || 1); // Mặc định là trang 1

    // Xử lý sự kiện nút "Previous"
    pagePrevious.addEventListener("click", function (e) {
        e.preventDefault();
        if (currentPage > 1) {
            currentPage--;
            updatePageURL(currentPage);
        }
    });

    // Xử lý sự kiện nút "Next"
    pageNext.addEventListener("click", function (e) {
        e.preventDefault();
        currentPage++;
        updatePageURL(currentPage);
    });

    // Hàm cập nhật tham số "page" trong URL
  function updatePageURL(page) {
        const newURL = updateURLParameter(window.location.href, "page", page);
        history.pushState({ path: newURL }, "", newURL);

        window.location.href = newURL;
    }

    // Hàm cập nhật tham số trong URL
  function updateURLParameter(url, param, paramValue) {
        // Loại bỏ tham số "page" nếu đã tồn tại
        
        if("page"===param){
        url = url.replace(/([&?])page=\d+/, '$1');

        }else{
                 url = url.replace(/([&?])pageSize=\d+/, '$1');

        }
        // Thêm tham số "page" mới
        if (url.endsWith("?")) {
            url = url.slice(0, -1);
        }
        if (url.includes("?")) {
            url = url + `&${param}=${paramValue}`;
        } else {
            url = url + `?${param}=${paramValue}`;
        }
        url = url.replace(/&&+/g, '&');
        url = url.replace(/\?&+/g, '?');

        return url;
    }

    


pageSizeSelect.addEventListener("change", function () {
    var selectedPageSize = pageSizeSelect.value;

    var currentURL = window.location.href;

    currentURL = currentURL.replace(/#/g, "");

    var newUrl  = updateURLParameter(currentURL,"pageSize",selectedPageSize) ;
    console.log(newUrl);
    window.location.href = newUrl;
});
});



    $(document).ready(function () {
    $('#userTable').on('click', '.delete-button', async function () {
        const id = $(this).data('id'); // Lấy giá trị data-id của nút
        if (id) {
            const apiUrl = `/delete/${id}`;
            fetch(apiUrl, {
                method: 'DELETE'
            })
            .then(  response => {
            console.log(response);

                if (response.ok) {
                    alert('Delete successful.');
                    window.location.reload();
                } else {
                    alert('Delete failed.');
                }
            })
            .catch(error => {
                console.error('Lỗi khi thực hiện yêu cầu:', error);
                alert('An error occurred while processing the request.');
            });
        }
    });
});


        
    </script>
</body>
</html>
    